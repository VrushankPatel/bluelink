# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.8'
          cache: true

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: bluelink

      - name: Debug directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of current directory:"
          ls -la
          echo "Contents of bluelink directory:"
          ls -la bluelink/
          echo "Contents of bluelink/cmd directory:"
          ls -la bluelink/cmd/
          echo "Contents of bluelink/cmd/bluelink directory:"
          ls -la bluelink/cmd/bluelink/

      - name: Install UPX
        run: |
          sudo apt-get update
          sudo apt-get install -y upx

      - name: Make build script executable
        run: chmod +x bluelink/build.sh

      - name: Run build script
        run: |
          cd bluelink
          export GOPATH=$(go env GOPATH)
          export PATH=$GOPATH/bin:$PATH
          ./build.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bluelink-binaries
          path: bluelink/build/
          retention-days: 5

      - name: Test
        run: |
          cd bluelink
          go test -v ./...

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: bluelink/coverage.txt
          retention-days: 5
